import styles from './ListPage.module.scss';
import useFetch from '../../hooks/useFetch';
import { Button } from '../../components/Button';
import { LoadingPage } from '../LoadingPage/';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { EmblaCarousel, TotalCardList } from '../../components/CardList';
import { TEAM } from '../../constants';

// ÏïàÎêúÍ≤ÉÎì§
// overview pattern rect ÏÑ§Ï†ï
// background 3D
// Î∞òÏùëÌòï
// ÌååÎπÑÏΩò Î©îÌÉÄÎç∞Ïù¥ÌÑ∞
// wiki, readme ÏûëÏÑ±
// Í≥ºÏ†ú

export default function ListPage() {
  const LIMIT = 8;
  const query = `?limit=${LIMIT}&offset=0`;
  const [offset, setOffset] = useState(8);
  const navigatePostPage = useNavigate();
  const { data: dataSortedCreateAt, isLoading } = useFetch(
    `/${TEAM}/recipients/${query}`,
  );
  const { data: dataSortedLike, isSortedLikeLoading } = useFetch(
    `/${TEAM}/recipients/${query}&sort=like`,
  );
  const { data: totalData, isTotalDataLoading } = useFetch(
    `/${TEAM}/recipients/?limit=${offset}&offset=0`,
  );

  const handleBottomBtnClick = () => {
    navigatePostPage(`/post`);
  };

  const handleScroll = (entries) => {
    const target = entries[0];
    if (target.isIntersecting && !isTotalDataLoading) {
      setOffset((prevOffset) => prevOffset + LIMIT);
    }
  };

  if (
    isLoading ||
    isSortedLikeLoading ||
    isTotalDataLoading ||
    !dataSortedCreateAt ||
    !dataSortedLike ||
    !totalData
  ) {
    return <LoadingPage />;
  }

  const hotItems = dataSortedLike ? dataSortedLike.results : null;
  const newItems = dataSortedCreateAt ? dataSortedCreateAt.results : null;
  const EmblaCarouselOptions = {
    align: 'start',
    dragFree: true,
    loop: true,
  };

  return (
    <main className={styles.container}>
      <EmblaCarousel
        slides={hotItems}
        options={EmblaCarouselOptions}
        CarouselName={'Ïù∏Í∏∞ Î°§ÎßÅ ÌéòÏù¥Ìçº üî•'}
      />
      <EmblaCarousel
        slides={newItems}
        options={EmblaCarouselOptions}
        CarouselName={'ÏµúÍ∑ºÏóê ÎßåÎì† Î°§ÎßÅ ÌéòÏù¥Ìçº ‚≠êÔ∏è'}
      />

      <TotalCardList
        data={totalData}
        CardListName={'Ï†ÑÏ≤¥ Î°§ÎßÅ ÌéòÏù¥Ìçº üíú'}
        handleScroll={handleScroll}
      />
      <div className={styles.buttonBg}>
        <Button
          className={styles.myButton}
          size={'md'}
          type={'button'}
          onClick={() => handleBottomBtnClick()}
        >
          ÎÇòÎèÑ ÎßåÎì§Ïñ¥Î≥¥Í∏∞
        </Button>
      </div>
    </main>
  );
}
